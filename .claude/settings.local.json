{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Bash(npx vite:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(supabase functions deploy:*)",
      "Bash(supabase functions logs:*)",
      "Bash(curl:*)",
      "Bash(npx supabase functions invoke:*)",
      "Bash(npx supabase functions deploy:*)",
      "Bash(npx supabase functions logs:*)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(find:*)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Bash(claude:*)",
      "Bash(claude auth vercel)",
      "Bash(claude config --help)",
      "Bash(claude config ls)",
      "WebSearch",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:github.com)",
      "Bash(set SUPABASE_URL=https://fyihypkigbcmsxyvseca.supabase.co)",
      "Bash(set:*)",
      "Bash(npx @supabase-community/supabase-mcp:*)",
      "Bash(npx @supabase/mcp-server-supabase@latest:*)",
      "Bash(npm install:*)",
      "Bash(docker logs:*)",
      "Bash(docker exec:*)",
      "Bash(docker cp:*)",
      "Bash(move:*)",
      "Bash(mv:*)",
      "Bash(rd:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(dir:*)",
      "Bash(npx tsc:*)",
      "Bash(npx supabase:*)",
      "Bash(npx:*)",
      "Bash(timeout 10 npx vite)",
      "Bash(timeout 15 npm run dev)",
      "Bash(timeout 30 npm run dev)",
      "Bash(timeout 10 npm run build)",
      "Bash(timeout 30 npm run build)",
      "Bash(timeout 5 npx vite build)",
      "Bash(timeout 5 npx vite --port 3000)",
      "Bash(timeout 10 npm test -- --run)",
      "Bash(timeout 30 npx -y ts-node index.ts)",
      "Bash(timeout:*)",
      "Bash(for route in \"/stories\" \"/create\" \"/account\")",
      "Bash(do echo -n \"$route: \")",
      "Bash(done)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright install:*)",
      "Bash(timeout 15 npx -y @playwright/mcp@latest --headless)",
      "Bash(timeout 10 npx -y @playwright/mcp --headless --no-sandbox)",
      "Bash(timeout 15 npx -y @playwright/mcp --browser=chromium --headless)",
      "Bash(timeout 5 npx -y @playwright/mcp --version)",
      "Bash(npm search:*)",
      "Bash(npm test:*)",
      "Bash(npm run test:*)",
      "Bash(npm run lint)",
      "Bash(npm run lint:check:*)",
      "Bash(npm run build:*)",
      "Bash(npm run mcp:status:*)",
      "Bash(npm run:*)",
      "Bash(npm ls:*)",
      "Bash(psql:*)",
      "Read(/c:\\Users\\Jzine\\Pictures\\Screenshots/**)",
      "mcp__filesystem__search_files",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__create_directory",
      "mcp__filesystem__list_allowed_directories",
      "mcp__supabase__get_logs",
      "mcp__supabase__execute_sql",
      "mcp__supabase__apply_migration",
      "mcp__supabase__list_tables",
      "mcp__supabase__get_project_url",
      "mcp__supabase__list_extensions",
      "mcp__github__search_repositories",
      "mcp__github__list_commits",
      "mcp__github__search_code",
      "mcp__github__create_issue",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__replicate__get_account",
      "mcp__replicate__search_models",
      "mcp__replicate__create_predictions",
      "mcp__replicate__get_predictions",
      "mcp__taskmaster__parse_prd",
      "mcp__taskmaster__models",
      "mcp__taskmaster__add_task",
      "mcp__taskmaster__expand_task",
      "mcp__taskmaster__add_subtask",
      "mcp__taskmaster__get_tasks",
      "mcp__taskmaster__next_task",
      "mcp__taskmaster__set_task_status",
      "mcp__ide__getDiagnostics",
      "mcp__notion__search",
      "mcp__notion__notion-create-pages",
      "mcp__linear__create_issue",
      "mcp__linear__list_teams",
      "mcp__linear-server__list_teams",
      "mcp__linear-server__create_issue",
      "mcp__linear-server__update_issue",
      "mcp__sentry__find_organizations",
      "mcp__sentry__find_projects",
      "mcp__sentry__create_project",
      "Bash(timeout 10 npx -y @sentry/mcp-server@latest --help)",
      "Bash(timeout 15 npx -y @sentry/mcp-server@latest --access-token=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)",
      "Bash(timeout 10 npx @sentry/mcp-server@latest --access-token=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 --help)",
      "Bash(timeout 5 npx -y mcp-obsidian \"E:/Tale-Forge-Reborn-2025/docs/Obsidian-MCP\")",
      "Bash(timeout 10 npx -y @anthropic/notion-mcp --help)",
      "Bash(timeout 10 npx -y @supabase/mcp-server-supabase@latest)",
      "Bash(timeout 10 npx -y @supabase/mcp-server-supabase@latest --help)",
      "Bash(timeout 10 npx -y @supabase/mcp-server-supabase@latest --read-only --project-ref=fyihypkigbcmsxyvseca)",
      "Bash(timeout 10 npx -y @supabase/mcp-server-supabase@latest --project-ref=fyihypkigbcmsxyvseca)",
      "Bash(timeout 10 npx -y @supabase/mcp-server-supabase@latest --project-ref=fyihypkigbcmsxyvseca --help)",
      "Bash(timeout 10 npx -y @supabase-community/supabase-mcp --help)",
      "Bash(timeout 10 npx -y ref-tools-mcp --help)",
      "Bash(npx @zilliz/claude-context-mcp:*)",
      "Read(/C:\\Users\\Jzine/**)",
      "mcp__linear__list_projects",
      "mcp__ref-tools__ref_search_documentation",
      "mcp__sentry__search_issues",
      "mcp__linear__list_my_issues",
      "Bash(tree:*)",
      "Bash(powershell:*)",
      "Bash(del:*)",
      "Bash(for page in HomePage DiscoverPage FeaturesPage HelpPage PricingPage TestimonialsPage PrivacyPage TermsPage)",
      "Bash(do echo -n \"$page: \")",
      "Bash([ -f \"src/pages/public/$page.tsx\" ])",
      "Bash(for page in PrivacyPage TermsPage)",
      "Bash([ -f \"src/pages/legal/$page.tsx\" ])",
      "Bash(for page in SigninPage SignupPage AuthCallbackPage)",
      "Bash([ -f \"src/pages/auth/$page.tsx\" ])",
      "Bash(for page in DashboardPage TemplatesPage AchievementsPage)",
      "Bash([ -f \"src/pages/authenticated/$page.tsx\" ])",
      "Bash(for page in StoriesHubPage StoryReaderPage StoryCompletePage)",
      "Bash([ -f \"src/pages/authenticated/stories/$page.tsx\" ])",
      "Bash(for page in CreateStoryPage)",
      "Bash([ -f \"src/pages/authenticated/create/$page.tsx\" ])",
      "Bash(for page in AccountPage ProfilePage)",
      "Bash([ -f \"src/pages/authenticated/account/$page.tsx\" ])",
      "Bash(for page in AdminDashboardPage AdminUsersPage AdminContentPage AdminSystemPage AdminAIPage AdminAnalyticsPage AdminGamificationAnalyticsPage)",
      "Bash([ -f \"src/pages/admin/$page.tsx\" ])",
      "Bash(for layout in MainLayout AuthenticatedLayout AdminLayout)",
      "Bash(do echo -n \"$layout: \")",
      "Bash([ -f \"src/components/layout/$layout.tsx\" ])",
      "Bash(for route in ProtectedRoute AdminRoute PublicOnlyRoute)",
      "Bash([ -f \"src/components/routes/$route.tsx\" ])",
      "Bash(for provider in AuthContext BillingContext SettingsContext)",
      "Bash(do echo -n \"$provider: \")",
      "Bash([ -f \"src/providers/$provider.tsx\" ])",
      "Bash([ -f \"src/utils/monitoring.ts\" ])",
      "mcp__taskmaster__initialize_project",
      "mcp__stripe__list_products",
      "Bash(supabase:*)",
      "mcp__stripe__list_prices",
      "mcp__stripe__create_product",
      "mcp__stripe__create_price",
      "mcp__stripe__create_payment_link",
      "Bash(for route in \"/discover\" \"/features\" \"/testimonials\" \"/pricing\" \"/help\" \"/privacy\" \"/terms\")",
      "Bash(for route in \"/auth/signin\" \"/auth/signup\" \"/auth/callback\")",
      "Bash(for route in \"/dashboard\" \"/stories/create\" \"/stories/read/test-id\" \"/stories/complete/test-id\" \"/stories/hub\" \"/account\" \"/profile\" \"/achievements\" \"/credits\")",
      "Bash(for route in \"/admin\" \"/admin/users\" \"/admin/content\" \"/admin/analytics\" \"/admin/gamification-analytics\" \"/admin/ai\" \"/admin/system\")",
      "Bash(for route in \"/templates\" \"/pricing/simple\")",
      "Bash(pgrep:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "taskmaster",
    "linear",
    "vercel",
    "stripe",
    "sentry",
    "notion",
    "ref-tools",
    "supabase"
  ]
}